(self.webpackChunklearning_datastructure=self.webpackChunklearning_datastructure||[]).push([[93],{4101:(e,t,r)=>{"use strict";r.r(t),r.d(t,{data:()=>l});const l={key:"v-631bf6a1",path:"/datastructure/week05.html",title:"第 5 周 归并排序法",lang:"zh-CN",frontmatter:{title:"第 5 周 归并排序法",url:"week05"},excerpt:"",headers:[],git:{createdTime:1613982075e3,updatedTime:1613982075e3,contributors:[]},filePathRelative:"datastructure/week05.md"}},2698:(e,t,r)=>{"use strict";r.r(t),r.d(t,{default:()=>a});const l=(0,r(8133).uE)('<h1 id="第-5-周-归并排序法"><a class="header-anchor" href="#第-5-周-归并排序法">#</a> 第 5 周 归并排序法</h1><p>我们将学习第一个高级排序算法：归并排序法。将看到更通用的递归算法的设计方法，理解自顶向下和自底向上，理解分治。看到归并排序法的优化，接触 O(nlogn) 这一复杂度的分析方式，归并排序思想的实际应用。</p><p><strong>课程安排</strong></p><ol><li>归并排序的算法思想</li><li>归并过程</li><li>复杂的递归算法运行机制解读</li><li>归并排序法的复杂度分析</li><li>归并排序法的优化</li><li>自顶向下和自底向上</li><li>使用归并排序法求逆序数对</li></ol>',4),a={render:function(e,t){return l}}}}]);