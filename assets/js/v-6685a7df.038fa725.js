(self.webpackChunklearning_datastructure=self.webpackChunklearning_datastructure||[]).push([[598],{2902:(e,t,l)=>{"use strict";l.r(t),l.d(t,{data:()=>i});const i={key:"v-6685a7df",path:"/datastructure/week07.html",title:"第 7 周 二分查找法",lang:"zh-CN",frontmatter:{title:"第 7 周 二分查找法",url:"week07"},excerpt:"",headers:[],git:{createdTime:1613982075e3,updatedTime:1613982075e3,contributors:[]},filePathRelative:"datastructure/week07.md"}},9379:(e,t,l)=>{"use strict";l.r(t),l.d(t,{default:()=>r});const i=(0,l(8133).uE)('<h1 id="第-7-周-二分查找法"><a class="header-anchor" href="#第-7-周-二分查找法">#</a> 第 7 周 二分查找法</h1><p>我们将学一个看似基础但“变化多端”的算法：二分搜索法 我们将探索基础二分搜索算法的递归和非递归写法理解循环不变量和如何处理边界问题等等，很多算法面试甚至竞赛问题，本质都是二分搜索问题。</p><p><strong>课程安排</strong></p><ol><li>二分搜索法的基本思想</li><li>二分搜索的递归实现</li><li>二分搜索的非递归实现</li><li>深刻理解程序设计中的边界问题</li><li>二分搜索在浮点数据中的应用</li><li>使用二分搜索解决寻界问题</li><li>避免死循环</li><li>二分搜索的模板</li><li>使用二分搜索法的思路解决实际问题</li></ol>',4),r={render:function(e,t){return i}}}}]);